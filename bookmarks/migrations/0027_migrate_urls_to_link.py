# Generated by Django 3.2.6 on 2022-01-08 19:27

from django.db import migrations
from django.db import connection

from bookmarks.models import Bookmark, Link

from collections import namedtuple


def namedtuplefetchall(cursor):
    """
    Return all rows from a cursor as a namedtuple.
    Assume the column names are unique.
    """
    desc = cursor.description
    nt_result = namedtuple("BookmarkTuple", [col[0] for col in desc])
    return [nt_result(*row) for row in cursor.fetchall()]


def forwards(apps, schema_editor):
    with connection.cursor() as cursor:
        cursor.execute("SELECT * FROM bookmarks_bookmark")
        bookmarks = namedtuplefetchall(cursor)

    for temp_bookmark in bookmarks:
        url = temp_bookmark.url
        if url[-1] == '/':
            url = url[:-1]
        link, created = Link.objects.get_or_create(
            url__startswith=url,
            defaults={
                "website_title": temp_bookmark.website_title,
                "website_description": temp_bookmark.website_description,
                "web_archive_snapshot_url": temp_bookmark.web_archive_snapshot_url,
                "favicon_file": temp_bookmark.favicon_file,
                "url": url
            }
        )
        bookmark = Bookmark.objects.get(pk=temp_bookmark.id)
        bookmark.link = link
        bookmark.save()


def reverse(apps, schema_editor):
    bookmarks = Bookmark.objects.select_related("link").all()
    for bookmark in bookmarks:
        link = bookmark.link
        bookmark.url = link.url
        bookmark.website_title = link.website_title
        bookmark.website_description = link.website_description
        bookmark.favicon_file = link.favicon_file
        bookmark.web_archive_snapshot_url = link.web_archive_snapshot_url
        bookmark.save()


class Migration(migrations.Migration):
    dependencies = [
        ("bookmarks", "0026_link_bookmark_link"),
    ]

    operations = [
        migrations.RunPython(forwards, reverse),
    ]
